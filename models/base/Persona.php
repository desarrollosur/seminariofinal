<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use app\models\query\PersonaQuery;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;
use yii\db\ActiveQuery;
use yii\db\ActiveRecord;
use yii\db\Expression;
use app\models\User;

/**
 * This is the base-model class for table "persona".
 *
 * @property integer $id
 * @property string $nombre
 * @property string $apellido
 * @property integer $tipo_dniid
 * @property string $dni
 * @property string $fecha_nacimiento
 * @property string $telefono
 * @property integer $nacionalidadid
 * @property string $domicilio
 * @property string $email
 * @property integer $activo
 * @property integer $version
 * @property string $fecha_creacion
 * @property string $fecha_actualizacion
 * @property integer $creado_porid
 * @property integer $actualizado_porid
 *
 * @property Administrativo $administrativo
 * @property Medico $medico
 * @property Paciente $paciente
 * @property Pais $nacionalidad
 * @property TipoDni $tipoDni
 * @property User $creadoPor
 * @property User $actualizadoPor
 * @property string $aliasModel
 */
abstract class Persona extends ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'persona';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => BlameableBehavior::className(),
                'createdByAttribute' => 'creado_porid',
                'updatedByAttribute' => 'actualizado_porid',
            ],
            [
                'class' => TimestampBehavior::className(),
                'createdAtAttribute' => 'fecha_creacion',
                'updatedAtAttribute' => 'fecha_actualizacion',
                'value'=>new Expression('NOW()')
                
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['nombre', 'apellido', 'dni'], 'required'],
            [['tipo_dniid', 'nacionalidadid', 'activo', 'version'], 'default', 'value' => null],
            [['tipo_dniid', 'nacionalidadid', 'activo', 'version'], 'integer'],
            [['fecha_nacimiento'], 'safe'],
            [['nombre', 'apellido', 'dni', 'telefono', 'domicilio', 'email'], 'string', 'max' => 255],
            [['nacionalidadid'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Pais::className(), 'targetAttribute' => ['nacionalidadid' => 'id']],
            [['tipo_dniid'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\TipoDni::className(), 'targetAttribute' => ['tipo_dniid' => 'id']],
            [['creado_porid'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['creado_porid' => 'id']],
            [['actualizado_porid'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['actualizado_porid' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'nombre' => 'Nombre',
            'apellido' => 'Apellido',
            'tipo_dniid' => 'Tipo Dniid',
            'dni' => 'Dni',
            'fecha_nacimiento' => 'Fecha Nacimiento',
            'telefono' => 'Telefono',
            'nacionalidadid' => 'Nacionalidadid',
            'domicilio' => 'Domicilio',
            'email' => 'Email',
            'activo' => 'Activo',
            'fecha_creacion' => 'Fecha Creacion',
            'fecha_actualizacion' => 'Fecha Actualizacion',
            'creado_porid' => 'Creado Porid',
            'actualizado_porid' => 'Actualizado Porid',
            'version' => 'Version',
        ];
    }

    /**
     * @return ActiveQuery
     */
    public function getAdministrativo()
    {
        return $this->hasOne(\app\models\Administrativo::className(), ['personaid' => 'id']);
    }

    /**
     * @return ActiveQuery
     */
    public function getMedico()
    {
        return $this->hasOne(\app\models\Medico::className(), ['personaid' => 'id']);
    }

    /**
     * @return ActiveQuery
     */
    public function getPaciente()
    {
        return $this->hasOne(\app\models\Paciente::className(), ['personaid' => 'id']);
    }

    /**
     * @return ActiveQuery
     */
    public function getNacionalidad()
    {
        return $this->hasOne(\app\models\Pais::className(), ['id' => 'nacionalidadid']);
    }

    /**
     * @return ActiveQuery
     */
    public function getTipoDni()
    {
        return $this->hasOne(\app\models\TipoDni::className(), ['id' => 'tipo_dniid']);
    }

    /**
     * @return ActiveQuery
     */
    public function getCreadoPor()
    {
        return $this->hasOne(User::className(), ['id' => 'creado_porid']);
    }

    /**
     * @return ActiveQuery
     */
    public function getActualizadoPor()
    {
        return $this->hasOne(User::className(), ['id' => 'actualizado_porid']);
    }


    
    /**
     * @inheritdoc
     * @return PersonaQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new PersonaQuery(get_called_class());
    }


}
